/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
sequenceable OHOS.Scan.SaneControlParam;
sequenceable OHOS.Scan.SaneParameters;
sequenceable OHOS.Scan.SaneOptionDescriptor;
sequenceable OHOS.Scan.SaneDevice;
sequenceable OHOS.Scan.SaneOutParam;
sequenceable OHOS.Scan.SanePictureData;

interface OHOS.Scan.ISaneBackends {
    void SaneInit([out] int status);
    void SaneExit();
    void SaneOpen([in] String scannerId, [out] int status);
    void SaneClose([in] String scannerId);
    void SaneGetOptionDescriptor([in] String scannerId, [in] int saneOption, [out] SaneOptionDescriptor saneOptDes, [out] int status);
    void SaneStart([in] String scannerId, [out] int status);
    void SaneGetParameters([in] String scannerId, [out] SaneParameters spm, [out] int status);
    void SaneCancel([in] String scannerId);
    void SaneGetDevices([out] SaneDevice[] deviceInfos, [out] int status);
    void SaneControlOption([in] String scannerId, [in] SaneControlParam controlParam, [out] SaneOutParam outParam, [out] int status);
    void SaneRead([in] String scannerId, [in] int buflen, [out] SanePictureData pictureData, [out] int status);
    void UnloadSystemAbility();
}